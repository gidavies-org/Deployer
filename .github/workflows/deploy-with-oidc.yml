# Reusable workflow to deploy a Node app to an Azure App Service using OIDC.

name: Deploy to Azure using OIDC

on:
  workflow_call:
    inputs:
      artifactName:
        required: true
        type: string
      envName:
        required: true
        type: string
      appServiceName:
        required: true
        type: string
      acrName:
        required: true
        type: string
      tagName:
        required: true 
        type: string
      imageName:
        required: true
        type: string
    secrets:            # Rather than inherit all, explicitly state and require the needed secrets
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

jobs:
  deploy:
    name: Deploy to ${{ inputs.envName }}
    permissions:
      id-token: write  # Needed for OIDC 
      contents: read
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.envName }}
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      
    - name: Azure login using OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy container from ACR to Azure App Service
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ inputs.appServiceName }}
        images: '${{ inputs.imageName }}'
    
    - name: Add container deployment job summary
      run: echo '### Deployment to ${{ inputs.envName }} complete. Container ${{ inputs.imageName }} deployed to App Service ${{ inputs.appServiceName }} :dart:' >> $GITHUB_STEP_SUMMARY